// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Model User
model User {
  id            String    @id @default(uuid())
  email         String    @unique
  name          String?
  password      String    @default("")
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  // Relasi
  favoriteRecipes FavoriteRecipe[] // Resep favorit pengguna
  ownRecipes      Recipe[]         @relation("UserRecipes") // Resep buatan pengguna
}

// Model Recipe
model Recipe {
  id            String    @id @default(uuid())
  name          String
  imageUrl      String?   // URL gambar resep (opsional)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  creatorId     String?   // ID pengguna yang membuat resep (null jika bukan buatan pengguna)

  // Relasi
  creator       User?     @relation("UserRecipes", fields: [creatorId], references: [id], onDelete: SetNull)
  favoriteBy    FavoriteRecipe[] // Pengguna yang menyimpan resep ini sebagai favorit
  ingredients   RecipeIngredient[] // Daftar bahan dengan jumlah dan satuan
  steps         RecipeStep[]      // Langkah-langkah dengan bahan yang digunakan
}

// Model RecipeIngredient (bahan untuk resep dengan jumlah dan satuan)
model RecipeIngredient {
  id        String   @id @default(uuid())
  recipeId  String
  ingredientId String
  quantity  String @default("") //contoh isi: 100 gram bawang
  // Relasi
  recipe    Recipe   @relation(fields: [recipeId], references: [id], onDelete: Cascade)
  ingredient Ingredient @relation(fields: [ingredientId], references: [id], onDelete: Cascade)
  @@unique([recipeId, ingredientId]) // Pastikan tidak ada duplikat bahan dalam satu resep
}

// Model RecipeStep (langkah memasak dengan bahan yang digunakan)
model RecipeStep {
  id            String    @id @default(uuid())
  recipeId      String
  stepNumber    Int       // Nomor urut langkah (misalnya 1, 2, 3)
  description   String    // Deskripsi langkah (misalnya "Tumis bawang hingga harum")

  // Relasi
  recipe        Recipe    @relation(fields: [recipeId], references: [id], onDelete: Cascade)
}

// Model Ingredient (daftar master bahan)
model Ingredient {
  id            String   @id @default(uuid())
  name          String   @unique // Nama bahan (misalnya "ayam", "bawang")
  createdAt     DateTime @default(now())

  // Relasi
  recipeIngredients RecipeIngredient[] // Penggunaan bahan di resep
}

// Model FavoriteRecipe (relasi banyak-ke-banyak antara User dan Recipe)
model FavoriteRecipe {
  id        String   @id @default(uuid())
  userId    String
  recipeId  String
  savedAt   DateTime @default(now())

  // Relasi
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  recipe    Recipe   @relation(fields: [recipeId], references: [id], onDelete: Cascade)

  @@unique([userId, recipeId]) // Pastikan tidak ada duplikat favorit
}